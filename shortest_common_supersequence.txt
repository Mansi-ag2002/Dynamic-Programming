package online_course_3;

public class shortest_common_supersequence {

	public int max(int a,int b) {
		if (a>b) {
			return a;
		}
		else {
			return b;
		}
	}
	public void lcs(String s,String a,int m,int n) {
		int t[][]=new int[m+1][n+1];
		
		for (int i=0;i<m+1;i++) {
			for (int j=0;j<n+1;j++) {
				if (i==0 || j==0) {
					t[i][j]=0;
				}
			}
		}
		for (int i=1;i<m+1;i++) {
			for (int j=1;j<n+1;j++) {
				if (s.charAt(i-1)==a.charAt(j-1)) {
					t[i][j]=1+ t[i-1][j-1];
					
				}
				
				else {
					t[i][j]=max(t[i-1][j],t[i][j-1]);
				}
			}
			
		}
		int i=m;
		int j=n;
		String w="";
		while(i>0 && j>0) {
			if (s.charAt(i-1)==a.charAt(j-1)) {
				w+=s.charAt(i-1);
				i--;
				j--;
				
			}
			else {
				if(t[i][j-1]>t[i-1][j]) {
					j--;
				}
				else {
					i--;
				}
			}
		}
		
		System.out.println(m+n-(w.length()));
		
	}
	public static void main(String[] args) {
		String p="abcdef";
		String q="abd";
		int m=p.length();
		int n=q.length();
		shortest_common_supersequence obj=new shortest_common_supersequence();
		obj.lcs(p,q,m,n);
		

	}

}
